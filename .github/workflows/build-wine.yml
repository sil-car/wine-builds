name: Build & release wine
on:
  workflow_dispatch:
env:
  CC: "gcc-9"
  CXX: "g++-9"
  CROSSCC_X32: "i686-w64-mingw32-gcc"
  CROSSCXX_X32: "i686-w64-mingw32-g++"
  CROSSCC_X64: "x86_64-w64-mingw32-gcc"
  CROSSCXX_X64: "x86_64-w64-mingw32-g++"
  CFLAGS_X32: "-march=x86-64 -msse2 -mfpmath=sse -O2 -ftree-vectorize"
  CFLAGS_X64: "-march=x86-64 -msse3 -mfpmath=sse -O2 -ftree-vectorize"
  # CFLAGS_X64: "-O3 -pipe -march=x86-64-v2 -mpclmul -mavx"  # https://github.com/vinegarhq/wine-builds/blob/master/.github/workflows/wine.yml
  LDFLAGS: "-Wl,-O1,--sort-common,--as-needed"
  WINE_CONFIG: "--without-oss --disable-winemenubuilder --disable-win16 --disable-tests --enable-archs=i386,x86_64 --without-gphoto --without-gssapi --without-inotify --without-krb5 --without-pcap --without-sane"
  FOCAL_PKGS: "libwayland-bin libwayland-dev libvulkan-dev libxpresent-dev libjxr-dev libusb-1.0-0-dev libgcrypt20-dev libpulse-dev libudev-dev libv4l-dev libgphoto2-dev liblcms2-dev libcapi20-dev samba-dev libpcsclite-dev libcups2-dev libxcb-xkb-dev libdbus-1-dev libffmpeg-ocaml-dev libgettextpo-dev libgnutls28-dev libgstreamer-plugins-bad1.0-dev libopengl-dev libosmesa6-dev libxcomposite-dev libxcursor-dev libxi-dev libxinerama-dev ocl-icd-opencl-dev waylandpp-dev flex bison gcc-9 g++-9 gcc-mingw-w64 g++-mingw-w64 gcc-multilib"
  NOBLE_WINEDEV_PKGS: "libwayland-bin libwayland-dev waylandpp-dev libvulkan-dev libxpresent-dev libjxr-dev libusb-1.0-0-dev libgcrypt20-dev libpulse-dev libudev-dev libv4l-dev libgphoto2-dev liblcms2-dev libcapi20-dev samba-dev libpcsclite-dev libcups2-dev libxcb-xkb-dev libdbus-1-dev libffmpeg-ocaml-dev libfontconfig-dev libfreetype-dev gettext-base libgettextpo-dev libgnutls28-dev libgstreamer-plugins-bad1.0-dev libopengl-dev libosmesa6-dev libxcomposite-dev libxcursor-dev libxi-dev libxinerama-dev ocl-icd-opencl-dev"
  NOBLE_BUILD_PKGS: "flex bison gcc-9 g++-9 gcc-mingw-w64 g++-mingw-w64 gcc-multilib"
  # NOBLE_BUILD_PKGS: "flex bison gcc-9 g++-9 mingw-w64 gcc-multilib"

jobs:
  build:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          repository: wine-mirror/wine
          ref: wine-9.19
          fetch-depth: 1
      - name: wine-prep
        id: wine-prep
        run: |
          # Update environment.
          echo CROSSCFLAGS_X32=$CFLAGS_X32 >> "$GITHUB_ENV"
          echo CROSSCFLAGS_X64=$CFLAGS_X64 >> "$GITHUB_ENV"
          echo CROSSLDFLAGS=$LDFLAGS >> "$GITHUB_ENV"
          echo WINE64_DIR=$GITHUB_WORKSPACE/wine64 >> "$GITHUB_ENV"
          echo WINE32_TOOLS_DIR=$GITHUB_WORKSPACE/wine32-tools >> "$GITHUB_ENV"
          echo WINE32_DIR=$GITHUB_WORKSPACE/wine32 >> "$GITHUB_ENV"
          echo MAKEFLAGS="-j$(($(nproc) + 1))" >> "$GITHUB_ENV"
          # sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt-get --yes install $NOBLE_BUILD_PKGS $NOBLE_WINEDEV_PKGS
      - name: set wine64 env
        # Can't use env: here b/c can't refer to existing env vars in their definitions.
        run: |
          echo "CROSSCC=$CROSSCC_X64" >> "$GITHUB_ENV"
          echo "CROSSCXX=$CROSSCXX_X64" >> "$GITHUB_ENV"
          echo "CFLAGS=$CFLAGS_X64" >> "$GITHUB_ENV"
          echo "CXXFLAGS=$CFLAGS_X64" >> "$GITHUB_ENV"
          echo "CROSSCFLAGS=$CROSSCFLAGS_X64" >> "$GITHUB_ENV"
          echo "CROSSCXXFLAGS=$CROSSCFLAGS_X64" >> "$GITHUB_ENV"
      - name: build wine64
        id: wine64
        run: |
          mkdir -p "$WINE64_DIR" && cd "$WINE64_DIR"
          $GITHUB_WORKSPACE/configure $WINE_CONFIG --enable-win64 --prefix=/wine-devel-amd64 --verbose
          make
      - name: set wine32-tools env
        run: |
          echo "CROSSCC=$CROSSCC_X32" >> "$GITHUB_ENV"
          echo "CROSSCXX=$CROSSCXX_X32" >> "$GITHUB_ENV"
          echo "CFLAGS=$CFLAGS_X32" >> "$GITHUB_ENV"
          echo "CXXFLAGS=$CFLAGS_X32" >> "$GITHUB_ENV"
          echo "CROSSCFLAGS=$CROSSCFLAGS_X32" >> "$GITHUB_ENV"
          echo "CROSSCXXFLAGS=$CROSSCFLAGS_X32" >> "$GITHUB_ENV"
      - name: build wine32-tools
        id: wine32-tools
        env:
          PKG_CONFIG_LIBDIR: /usr/lib/i386-linux-gnu/pkgconfig:/usr/local/lib/pkgconfig:/usr/local/lib/i386-linux-gnu/pkgconfig
        run: |
          mkdir -p "$WINE32_TOOLS_DIR" && cd "$WINE32_TOOLS_DIR"
          $GITHUB_WORKSPACE/configure $WINE_CONFIG --prefix=/wine-devel-x86
          make
      - name: set wine32 env
        run: |
          echo "CROSSCC=$CROSSCC_X32" >> "$GITHUB_ENV"
          echo "CROSSCXX=$CROSSCXX_X32" >> "$GITHUB_ENV"
          echo "CFLAGS=$CFLAGS_X64" >> "$GITHUB_ENV"
          echo "CXXFLAGS=$CFLAGS_X64" >> "$GITHUB_ENV"
          echo "CROSSCFLAGS=$CROSSCFLAGS_X64" >> "$GITHUB_ENV"
          echo "CROSSCXXFLAGS=$CROSSCFLAGS_X64" >> "$GITHUB_ENV"
      - name: build wine32
        id: wine32
        env:
          PKG_CONFIG_LIBDIR: /usr/lib/i386-linux-gnu/pkgconfig:/usr/local/lib/pkgconfig:/usr/local/lib/i386-linux-gnu/pkgconfig
        run: |
          mkdir -p "$WINE32_DIR" && cd "$WINE32_DIR"
          $GITHUB_WORKSPACE/configure $WINE_CONFIG --with-wine64="$WINE64_DIR" --with-wine-tools="$WINE32_TOOLS_DIR" --prefix=/wine-devel
          make
      - name: Upload logs
        if: '!cancelled()'
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: '**/*.log'
          retention-days: 2
      - name: Upload build result
        uses: actions/upload-artifact@v4
        with:
          name: wine-devel-9.19-wow64
          path: wine-devel/*
